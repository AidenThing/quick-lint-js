// Copyright (C) 2020  Matthew "strager" Glazar
// See end of file for extended copyright information.

#include <algorithm>
#include <quick-lint-js/assert.h>
#include <quick-lint-js/container/linked-bump-allocator.h>
#include <quick-lint-js/fe/jsx.h>
#include <quick-lint-js/port/char8.h>
#include <string>
#include <string_view>
#include <unordered_map>

using namespace std::literals::string_view_literals;

namespace quick_lint_js {
const hash_map<string8_view, jsx_attribute>& jsx_attribute_aliases() {
  static linked_bump_allocator<1> string_allocator("jsx_attribute_aliases");
  static const hash_map<string8_view, jsx_attribute> cache = [] {
    // FIXME(strager): This is very inefficient.
    hash_map<string8_view, jsx_attribute> aliases{
        {u8"class"_sv, {u8"className"_sv}},
    };

    // Compatibility with React.js as of January 12, 2022:
    // https://github.com/facebook/react/blob/c09596cc6021e1f9f8a88179add93f80fc07823b/packages/react-dom/src/shared/possibleStandardNames.js
    string8_view attribute_names[] = {
        // List based on React.js (react-dom) as of January 12, 2022:
        // https://github.com/facebook/react/blob/c09596cc6021e1f9f8a88179add93f80fc07823b/packages/react-dom/src/events/EventRegistry.js
        u8"onAbort"_sv,
        u8"onAbortCapture"_sv,
        u8"onAnimationEnd"_sv,
        u8"onAnimationEndCapture"_sv,
        u8"onAnimationIteration"_sv,
        u8"onAnimationIterationCapture"_sv,
        u8"onAnimationStart"_sv,
        u8"onAnimationStartCapture"_sv,
        u8"onAuxClick"_sv,
        u8"onAuxClickCapture"_sv,
        u8"onBeforeInput"_sv,
        u8"onBeforeInputCapture"_sv,
        u8"onBlur"_sv,
        u8"onBlurCapture"_sv,
        u8"onCanPlay"_sv,
        u8"onCanPlayCapture"_sv,
        u8"onCanPlayThrough"_sv,
        u8"onCanPlayThroughCapture"_sv,
        u8"onCancel"_sv,
        u8"onCancelCapture"_sv,
        u8"onChange"_sv,
        u8"onChangeCapture"_sv,
        u8"onClick"_sv,
        u8"onClickCapture"_sv,
        u8"onClose"_sv,
        u8"onCloseCapture"_sv,
        u8"onCompositionEnd"_sv,
        u8"onCompositionEndCapture"_sv,
        u8"onCompositionStart"_sv,
        u8"onCompositionStartCapture"_sv,
        u8"onCompositionUpdate"_sv,
        u8"onCompositionUpdateCapture"_sv,
        u8"onContextMenu"_sv,
        u8"onContextMenuCapture"_sv,
        u8"onCopy"_sv,
        u8"onCopyCapture"_sv,
        u8"onCut"_sv,
        u8"onCutCapture"_sv,
        u8"onDoubleClick"_sv,
        u8"onDoubleClickCapture"_sv,
        u8"onDrag"_sv,
        u8"onDragCapture"_sv,
        u8"onDragEnd"_sv,
        u8"onDragEndCapture"_sv,
        u8"onDragEnter"_sv,
        u8"onDragEnterCapture"_sv,
        u8"onDragExit"_sv,
        u8"onDragExitCapture"_sv,
        u8"onDragLeave"_sv,
        u8"onDragLeaveCapture"_sv,
        u8"onDragOver"_sv,
        u8"onDragOverCapture"_sv,
        u8"onDragStart"_sv,
        u8"onDragStartCapture"_sv,
        u8"onDrop"_sv,
        u8"onDropCapture"_sv,
        u8"onDurationChange"_sv,
        u8"onDurationChangeCapture"_sv,
        u8"onEmptied"_sv,
        u8"onEmptiedCapture"_sv,
        u8"onEncrypted"_sv,
        u8"onEncryptedCapture"_sv,
        u8"onEnded"_sv,
        u8"onEndedCapture"_sv,
        u8"onError"_sv,
        u8"onErrorCapture"_sv,
        u8"onFocus"_sv,
        u8"onFocusCapture"_sv,
        u8"onGotPointerCapture"_sv,
        u8"onGotPointerCaptureCapture"_sv,
        u8"onInput"_sv,
        u8"onInputCapture"_sv,
        u8"onInvalid"_sv,
        u8"onInvalidCapture"_sv,
        u8"onKeyDown"_sv,
        u8"onKeyDownCapture"_sv,
        u8"onKeyPress"_sv,
        u8"onKeyPressCapture"_sv,
        u8"onKeyUp"_sv,
        u8"onKeyUpCapture"_sv,
        u8"onLoad"_sv,
        u8"onLoadCapture"_sv,
        u8"onLoadStart"_sv,
        u8"onLoadStartCapture"_sv,
        u8"onLoadedData"_sv,
        u8"onLoadedDataCapture"_sv,
        u8"onLoadedMetadata"_sv,
        u8"onLoadedMetadataCapture"_sv,
        u8"onLostPointerCapture"_sv,
        u8"onLostPointerCaptureCapture"_sv,
        u8"onMouseDown"_sv,
        u8"onMouseDownCapture"_sv,
        u8"onMouseEnter"_sv,
        u8"onMouseLeave"_sv,
        u8"onMouseMove"_sv,
        u8"onMouseMoveCapture"_sv,
        u8"onMouseOut"_sv,
        u8"onMouseOutCapture"_sv,
        u8"onMouseOver"_sv,
        u8"onMouseOverCapture"_sv,
        u8"onMouseUp"_sv,
        u8"onMouseUpCapture"_sv,
        u8"onPaste"_sv,
        u8"onPasteCapture"_sv,
        u8"onPause"_sv,
        u8"onPauseCapture"_sv,
        u8"onPlay"_sv,
        u8"onPlayCapture"_sv,
        u8"onPlaying"_sv,
        u8"onPlayingCapture"_sv,
        u8"onPointerCancel"_sv,
        u8"onPointerCancelCapture"_sv,
        u8"onPointerDown"_sv,
        u8"onPointerDownCapture"_sv,
        u8"onPointerEnter"_sv,
        u8"onPointerLeave"_sv,
        u8"onPointerMove"_sv,
        u8"onPointerMoveCapture"_sv,
        u8"onPointerOut"_sv,
        u8"onPointerOutCapture"_sv,
        u8"onPointerOver"_sv,
        u8"onPointerOverCapture"_sv,
        u8"onPointerUp"_sv,
        u8"onPointerUpCapture"_sv,
        u8"onProgress"_sv,
        u8"onProgressCapture"_sv,
        u8"onRateChange"_sv,
        u8"onRateChangeCapture"_sv,
        u8"onReset"_sv,
        u8"onResetCapture"_sv,
        u8"onResize"_sv,
        u8"onResizeCapture"_sv,
        u8"onScroll"_sv,
        u8"onScrollCapture"_sv,
        u8"onSeeked"_sv,
        u8"onSeekedCapture"_sv,
        u8"onSeeking"_sv,
        u8"onSeekingCapture"_sv,
        u8"onSelect"_sv,
        u8"onSelectCapture"_sv,
        u8"onStalled"_sv,
        u8"onStalledCapture"_sv,
        u8"onSubmit"_sv,
        u8"onSubmitCapture"_sv,
        u8"onSuspend"_sv,
        u8"onSuspendCapture"_sv,
        u8"onTimeUpdate"_sv,
        u8"onTimeUpdateCapture"_sv,
        u8"onToggle"_sv,
        u8"onToggleCapture"_sv,
        u8"onTouchCancel"_sv,
        u8"onTouchCancelCapture"_sv,
        u8"onTouchEnd"_sv,
        u8"onTouchEndCapture"_sv,
        u8"onTouchMove"_sv,
        u8"onTouchMoveCapture"_sv,
        u8"onTouchStart"_sv,
        u8"onTouchStartCapture"_sv,
        u8"onTransitionEnd"_sv,
        u8"onTransitionEndCapture"_sv,
        u8"onVolumeChange"_sv,
        u8"onVolumeChangeCapture"_sv,
        u8"onWaiting"_sv,
        u8"onWaitingCapture"_sv,
        u8"onWheel"_sv,
        u8"onWheelCapture"_sv,

        // Compatibility with React.js as of January 12, 2022:
        // https://github.com/facebook/react/blob/c09596cc6021e1f9f8a88179add93f80fc07823b/packages/react-dom/src/shared/possibleStandardNames.js
        u8"accentHeight"_sv,
        u8"acceptCharset"_sv,
        u8"accessKey"_sv,
        u8"alignmentBaseline"_sv,
        u8"allowFullScreen"_sv,
        u8"allowReorder"_sv,
        u8"arabicForm"_sv,
        u8"attributeName"_sv,
        u8"attributeType"_sv,
        u8"autoCapitalize"_sv,
        u8"autoComplete"_sv,
        u8"autoCorrect"_sv,
        u8"autoFocus"_sv,
        u8"autoPlay"_sv,
        u8"autoReverse"_sv,
        u8"autoSave"_sv,
        u8"baseFrequency"_sv,
        u8"baseProfile"_sv,
        u8"baselineShift"_sv,
        u8"calcMode"_sv,
        u8"capHeight"_sv,
        u8"cellPadding"_sv,
        u8"cellSpacing"_sv,
        u8"charSet"_sv,
        u8"classID"_sv,
        u8"className"_sv,
        u8"clipPath"_sv,
        u8"clipPathUnits"_sv,
        u8"clipRule"_sv,
        u8"colSpan"_sv,
        u8"colorInterpolation"_sv,
        u8"colorInterpolationFilters"_sv,
        u8"colorProfile"_sv,
        u8"colorRendering"_sv,
        u8"contentEditable"_sv,
        u8"contentScriptType"_sv,
        u8"contentStyleType"_sv,
        u8"contextMenu"_sv,
        u8"controlsList"_sv,
        u8"crossOrigin"_sv,
        u8"dangerouslySetInnerHTML"_sv,
        u8"dateTime"_sv,
        u8"defaultChecked"_sv,
        u8"defaultValue"_sv,
        u8"diffuseConstant"_sv,
        u8"disablePictureInPicture"_sv,
        u8"disableRemotePlayback"_sv,
        u8"dominantBaseline"_sv,
        u8"edgeMode"_sv,
        u8"enableBackground"_sv,
        u8"encType"_sv,
        u8"enterKeyHint"_sv,
        u8"externalResourcesRequired"_sv,
        u8"fillOpacity"_sv,
        u8"fillRule"_sv,
        u8"filterRes"_sv,
        u8"filterUnits"_sv,
        u8"floodColor"_sv,
        u8"floodOpacity"_sv,
        u8"fontFamily"_sv,
        u8"fontSize"_sv,
        u8"fontSizeAdjust"_sv,
        u8"fontStretch"_sv,
        u8"fontStyle"_sv,
        u8"fontVariant"_sv,
        u8"fontWeight"_sv,
        u8"formAction"_sv,
        u8"formEncType"_sv,
        u8"formMethod"_sv,
        u8"formNoValidate"_sv,
        u8"formTarget"_sv,
        u8"frameBorder"_sv,
        u8"glyphName"_sv,
        u8"glyphOrientationHorizontal"_sv,
        u8"glyphOrientationVertical"_sv,
        u8"glyphRef"_sv,
        u8"gradientTransform"_sv,
        u8"gradientUnits"_sv,
        u8"horizAdvX"_sv,
        u8"horizOriginX"_sv,
        u8"hrefLang"_sv,
        u8"htmlFor"_sv,
        u8"httpEquiv"_sv,
        u8"imageRendering"_sv,
        u8"imageSizes"_sv,
        u8"imageSrcSet"_sv,
        u8"innerHTML"_sv,
        u8"inputMode"_sv,
        u8"itemID"_sv,
        u8"itemProp"_sv,
        u8"itemRef"_sv,
        u8"itemScope"_sv,
        u8"itemType"_sv,
        u8"kernelMatrix"_sv,
        u8"kernelUnitLength"_sv,
        u8"keyParams"_sv,
        u8"keyPoints"_sv,
        u8"keySplines"_sv,
        u8"keyTimes"_sv,
        u8"keyType"_sv,
        u8"lengthAdjust"_sv,
        u8"letterSpacing"_sv,
        u8"lightingColor"_sv,
        u8"limitingConeAngle"_sv,
        u8"marginHeight"_sv,
        u8"marginWidth"_sv,
        u8"markerEnd"_sv,
        u8"markerHeight"_sv,
        u8"markerMid"_sv,
        u8"markerStart"_sv,
        u8"markerUnits"_sv,
        u8"markerWidth"_sv,
        u8"maskContentUnits"_sv,
        u8"maskUnits"_sv,
        u8"maxLength"_sv,
        u8"mediaGroup"_sv,
        u8"minLength"_sv,
        u8"noModule"_sv,
        u8"noValidate"_sv,
        u8"numOctaves"_sv,
        u8"overlinePosition"_sv,
        u8"overlineThickness"_sv,
        u8"paintOrder"_sv,
        u8"pathLength"_sv,
        u8"patternContentUnits"_sv,
        u8"patternTransform"_sv,
        u8"patternUnits"_sv,
        u8"playsInline"_sv,
        u8"pointerEvents"_sv,
        u8"pointsAtX"_sv,
        u8"pointsAtY"_sv,
        u8"pointsAtZ"_sv,
        u8"preserveAlpha"_sv,
        u8"preserveAspectRatio"_sv,
        u8"primitiveUnits"_sv,
        u8"radioGroup"_sv,
        u8"readOnly"_sv,
        u8"refX"_sv,
        u8"refY"_sv,
        u8"referrerPolicy"_sv,
        u8"renderingIntent"_sv,
        u8"repeatCount"_sv,
        u8"repeatDur"_sv,
        u8"requiredExtensions"_sv,
        u8"requiredFeatures"_sv,
        u8"rowSpan"_sv,
        u8"shapeRendering"_sv,
        u8"specularConstant"_sv,
        u8"specularExponent"_sv,
        u8"spellCheck"_sv,
        u8"spreadMethod"_sv,
        u8"srcDoc"_sv,
        u8"srcLang"_sv,
        u8"srcSet"_sv,
        u8"startOffset"_sv,
        u8"stdDeviation"_sv,
        u8"stitchTiles"_sv,
        u8"stopColor"_sv,
        u8"stopOpacity"_sv,
        u8"strikethroughPosition"_sv,
        u8"strikethroughThickness"_sv,
        u8"strokeDasharray"_sv,
        u8"strokeDashoffset"_sv,
        u8"strokeLinecap"_sv,
        u8"strokeLinejoin"_sv,
        u8"strokeMiterlimit"_sv,
        u8"strokeOpacity"_sv,
        u8"strokeWidth"_sv,
        u8"suppressContentEditableWarning"_sv,
        u8"suppressHydrationWarning"_sv,
        u8"surfaceScale"_sv,
        u8"systemLanguage"_sv,
        u8"tabIndex"_sv,
        u8"tableValues"_sv,
        u8"targetX"_sv,
        u8"targetY"_sv,
        u8"textAnchor"_sv,
        u8"textDecoration"_sv,
        u8"textLength"_sv,
        u8"textRendering"_sv,
        u8"underlinePosition"_sv,
        u8"underlineThickness"_sv,
        u8"unicodeBidi"_sv,
        u8"unicodeRange"_sv,
        u8"unitsPerEm"_sv,
        u8"useMap"_sv,
        u8"vAlphabetic"_sv,
        u8"vHanging"_sv,
        u8"vIdeographic"_sv,
        u8"vMathematical"_sv,
        u8"vectorEffect"_sv,
        u8"vertAdvY"_sv,
        u8"vertOriginX"_sv,
        u8"vertOriginY"_sv,
        u8"viewBox"_sv,
        u8"viewTarget"_sv,
        u8"wordSpacing"_sv,
        u8"writingMode"_sv,
        u8"xChannelSelector"_sv,
        u8"xHeight"_sv,
        u8"xlinkActuate"_sv,
        u8"xlinkArcrole"_sv,
        u8"xlinkHref"_sv,
        u8"xlinkRole"_sv,
        u8"xlinkShow"_sv,
        u8"xlinkTitle"_sv,
        u8"xlinkType"_sv,
        u8"xmlBase"_sv,
        u8"xmlLang"_sv,
        u8"xmlSpace"_sv,
        u8"xmlnsXlink"_sv,
        u8"yChannelSelector"_sv,
        u8"zoomAndPan"_sv,
    };
    for (string8_view attribute_name : attribute_names) {
      char8* lowered_attribute_name =
          string_allocator.allocate_uninitialized_array<char8>(
              attribute_name.size());
      std::transform(attribute_name.begin(), attribute_name.end(),
                     lowered_attribute_name, tolower);
      auto [_it, inserted] = aliases.try_emplace(
          string8_view(lowered_attribute_name, attribute_name.size()),
          jsx_attribute{attribute_name});
      QLJS_ASSERT(inserted);
    }

    return aliases;
  }();
  return cache;
}
}

// quick-lint-js finds bugs in JavaScript programs.
// Copyright (C) 2020  Matthew "strager" Glazar
//
// This file is part of quick-lint-js.
//
// quick-lint-js is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// quick-lint-js is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with quick-lint-js.  If not, see <https://www.gnu.org/licenses/>.
